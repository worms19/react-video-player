{"version":3,"sources":["Video/VideoComponent.js","App.js","serviceWorker.js","index.js","Video/big_buck_bunny.mp4"],"names":["VideoComponent","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","played","duration","current","progress","volume","seeking","seekedValue","handlePlayPause","bind","assertThisInitialized","handleProgress","handleLoad","volumeUp","volumeDown","changeTime","onSeekMouseDown","onSeekMouseUp","inherits","createClass","key","value","setState","player","pause","play","currentTime","console","log","evt","Math","floor","target","_this2","playStyle","color","playButton","react_default","a","createElement","className","style","pauseButton","ref","onTimeUpdate","onLoadedMetadata","controls","src","source","type","onClick","min","max","step","onChange","onMouseDown","onMouseUp","ref2","input","React","Component","App","VideoComponent_VideoComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a96a58cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport source from \"./big_buck_bunny.mp4\";\r\nimport { Progress } from 'reactstrap';\r\n\r\nexport class VideoComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      played: false,\r\n      duration : 0,\r\n      current : 0,\r\n      progress : 0,\r\n      volume : 0.5,\r\n      seeking: false,\r\n      seekedValue : 0,\r\n    };\r\n\r\n    this.handlePlayPause = this.handlePlayPause.bind(this);\r\n    this.handleProgress = this.handleProgress.bind(this);\r\n    this.handleLoad = this.handleLoad.bind(this);\r\n    this.volumeUp = this.volumeUp.bind(this);\r\n    this.volumeDown = this.volumeDown.bind(this);\r\n    this.changeTime = this.changeTime.bind(this);\r\n    this.onSeekMouseDown = this.onSeekMouseDown.bind(this);\r\n    this.onSeekMouseUp = this.onSeekMouseUp.bind(this);\r\n\r\n\r\n  }\r\n\r\n  handlePlayPause() {\r\n    this.setState({\r\n      played: !this.state.played\r\n    });\r\n    this.state.played ?  this.player.pause() :this.player.play()\r\n\r\n  }\r\n\r\n\r\n\r\n  volumeUp(){\r\n    this.setState({\r\n      volume : this.state.volume <= 0.9 ? this.state.volume + 0.1 : this.state.volume = 1\r\n    })\r\n    this.player.volume = this.state.volume ;\r\n\r\n  }\r\n\r\n  volumeDown(){\r\n    this.setState({\r\n      volume : this.state.volume >= 0.1 ? this.state.volume - 0.1 : this.state.volume = 0\r\n    })\r\n    this.player.volume = this.state.volume ;\r\n\r\n  }\r\n  handleProgress () {\r\n    if(!this.state.seeking) {\r\n      this.setState({\r\n        progress: (this.player.currentTime / this.state.duration),\r\n      });\r\n    }\r\n    console.log('onPr')\r\n\r\n  }\r\n  handleLoad (){\r\n    this.setState({\r\n      duration : this.player.duration\r\n    });\r\n\r\n}\r\n  changeTime (evt) {\r\n    this.setState({\r\n      progress :  (Math.floor((evt.target.value) * 100) / 100)\r\n    });\r\n\r\n    console.log(this.state.progress)\r\n    if(this.state.seeking){\r\n    this.player.currentTime = (this.state.progress * this.state.duration);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  onSeekMouseUp(){\r\n    this.setState({ seeking: false })\r\n  }\r\n\r\n  onSeekMouseDown(){\r\n    this.setState({ seeking: true })\r\n  }\r\n\r\n\r\n  render() {\r\n    const playStyle = { color: \"purple\" };\r\n    const playButton = (\r\n      <i className=\"fas fa-play-circle fa-4x\" style={playStyle} />\r\n    );\r\n    const pauseButton = (\r\n      <i className=\"fas fa-pause-circle fa-4x\" style={playStyle} />\r\n    );\r\n    return (\r\n      <div>\r\n        <video\r\n            ref={ref => this.player = ref}\r\n            onTimeUpdate={this.handleProgress}\r\n\r\n            onLoadedMetadata={this.handleLoad}>\r\n\r\n          <source controls  src={source} type=\"video/mp4\" />\r\n        </video>\r\n\r\n        <div>\r\n          <button onClick={this.handlePlayPause}>\r\n            {this.state.played ? pauseButton : playButton}\r\n          </button>\r\n\r\n          <button onClick={this.volumeDown}>\r\n            <i className=\"fas fa-volume-down fa-4x\" style={playStyle} />\r\n          </button>\r\n          <button onClick={this.volumeUp}>\r\n            <i className=\"fas fa-volume-up fa-4x\" style={playStyle} />\r\n          </button>\r\n\r\n        </div>\r\n\r\n\r\n        <div>\r\n\r\n          <div className=\"text-center \" >{Math.floor((this.state.progress * this.state.duration) * 100) / 100} : {Math.floor(this.state.duration)}</div>\r\n\r\n\r\n\r\n\r\n          <input className=\"width-70\"\r\n                 type='range'\r\n                 min={0}\r\n                 max={1}\r\n                 step='any'\r\n                 value={this.state.progress}\r\n                 onChange={this.changeTime}\r\n                 onMouseDown={this.onSeekMouseDown}\r\n                 onMouseUp={this.onSeekMouseUp}\r\n                 ref={ref2 => this.input = ref2}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { VideoComponent } from \"./Video/VideoComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Simple Video Player</h1>\r\n      <VideoComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/big_buck_bunny.f13004ee.mp4\";"],"sourceRoot":""}